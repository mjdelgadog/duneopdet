BEGIN_PROLOG

dune_deconvolution:
{
  module_type:       "Deconvolution"
  InputModule:       "opdigi"              
  InstanceName:      ""    
 
  #The LineNoiseRMS,PreTrigger,Pedestal, Samples and DigiDataFile below have the same values as the Digitizer.

  LineNoiseRMS:      3        # Pedestal RMS in [ADC] counts, likely an underestimate
  PreTrigger:        100      # In [ticks] 
  Pedestal:          1500     # In [ADC]
  Samples:           1000     # Timewindow (ReadoutWindow) in [ticks]
  Scale:             0.001    # Scaling of resulting deconvolution signal.
  DigiDataColumn:      0      # SPE template source file column.                     
  DigiDataFile:      "fbk_decon_digi_2023.txt"  # The SPE template with undershoot and without pretrigger (in ADC*us), 
                                                # was obtained from DAPHNE V2 and the cold amplifier (with 48 SiPM FBK/HPK).  
  
  AutoScale:             true   # Scaling based on SPE amplitude from template (Use "true" for Wiener Filter and
                                # "false" for Gauss Filter). If set to false the value of Scale is used.
  ApplyPostBLCorrection: true   # Correct baseline after the deconvolution process.
  PedestalBuffer:         20    # In [ticks], should always be smaller than PreTrigger.
  
  WfmFilter: {
    Name: "Wiener"              # Write the filter: "Wiener" or "Gauss"
    Cutoff: 1.                  # In MHz.The cutoff value should be changed if signal smoothing is not observed.
  }
  
  ApplyPostfilter:       true   # Filter the waveforms after deconvolution.

  WfmPostfilter: {
    Name: "Gauss"               # Only available "Gauss" postfilter
    Cutoff: 2.8                 # The cutoff frequency is defined by the standard deviation in the frequency domain,
  }                             # In MHz.The cutoff value should be changed if signal smoothing is not observed.
  
}

//By debbuging and review the values (SNR,H,S,N,G0,G1,G,V,v) of the Wiener filter:

deconvolution_snr: @local::standard_deconvolution
deconvolution_snr.OutputProduct: "SNR"

END_PROLOG
  
  
